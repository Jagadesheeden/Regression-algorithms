# -*- coding: utf-8 -*-
"""Decision_Tree_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_FD_MTvcee7bff4vVZQBaVKIcpmCv0QE

For a Decision Tree Algorithm to be effective it needs to find the root node effectively to minimize complications in Decision Tree.

In a Decision tree, there are two nodes, which are the Decision Node and Leaf Node. Decision nodes are used to make any decision and have multiple branches, whereas Leaf nodes are the output of those decisions and do not contain any further branches.

It is a graphical representation for getting all the possible solutions to a problem/decision based on given conditions.

Easy to implement: Not much of data mod. is required.

Many hyperparameters are not required to tune.

Disadvantage: It may suffer from under / overfitting often.

https://web.cs.hacettepe.edu.tr/~ilyas/Courses/BIL712/lec02-DecisionTree.pdf

Import all the necessary package and read the data from dataset
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

IceCreamData = pd.read_csv('/content/IceCreamData.csv')

IceCreamData.head()

"""When we plot the values in the dataset we are getting a scatter plot like this this is because of unsorted values in the dataset"""

plt.scatter(IceCreamData.Temperature,IceCreamData.Revenue)

"""Giving the value for feature and target and splitting the data for training and testing"""

x = IceCreamData['Temperature'].values
y = IceCreamData['Revenue'].values

x = x.reshape((-1,1))
y = y.reshape((-1,1))

from sklearn.model_selection import train_test_split 
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.1,random_state = 2022)

"""Import the decision tree regression model and fit our data to it"""

from sklearn.tree import DecisionTreeRegressor
dt = DecisionTreeRegressor()
dt.fit(x_train,y_train)
y_pred = dt.predict(x_test)

"""The absolute mean error was little low when we compare to the previous algorithm"""

from sklearn.metrics import mean_absolute_error
mean_absolute_error(y_test,y_pred)

"""The data are not in a sorted order"""

x[:5,:]

"""As we are using the two dimensional array we cannot use normal sorting we will be using argsort, it will sort the perticular row or column by locating its index"""

x_sorted = x[x[:,0].argsort()]

"""The values are sorted"""

x_sorted[:5,:]

plt.plot(x_sorted,dt.predict(x))

dt.predict([[45]])

"""Importing tree model from sklearn for show the value in text and graph """

from sklearn import tree

print(tree.export_text(dt))

import graphviz
data = tree.export_graphviz(dt)
graphviz.Source(data)